swagger: "2.0"
info:
  description: "API for Fetching, Saving, Updating and Deleting tasks"
  version: "1.0.0"
  title: "TaskTrackingTool API"
  contact:
    email: "viktorzdravkovski995@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/api/v1"
tags:
  - name: "tttool"
    description: "Everything about the task tracking tool"
schemes:
  - "https"
  - "http"
paths:
  /task-tracker/task:
    get:
      tags:
        - 'TaskTracker'
      summary: 'Returns a list of tasks.'
      description: 'Fetch all tasks from database.'
      operationId: 'getTasks'
      produces:
        - 'application/json'
      parameters: []
      responses:
        200:
          description: 'Status 200 - Response OK'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Task'
        405:
          description: 'Invalid input'
    post:
      tags:
        - 'TaskTracker'
      summary: 'Add a task'
      description: 'Add a new task in database'
      operationId: 'addTask'
      consumes:
        - 'application/json'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTaskRequestBody'
      responses:
        200:
          description: 'Status 200 - Response OK'
          schema:
            $ref: '#/definitions/AddTaskConfirmation'
        403:
          description: 'Status 403 - Access unauthorized'

  /task-tracker/task/{id}:
    get:
      tags:
        - 'TaskTracker'
      summary: 'Return a task by id'
      description: 'Fetch a task by id'
      operationId: 'getTask'
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          type: string
          description: 'id of task'
          required: true
      responses:
        200:
          description: 'Status 200 - Response OK'
          schema:
            $ref: '#/definitions/Task'
        403:
          description: 'Status 403 - Access forbidden'
    delete:
      tags:
        - 'TaskTracker'
      summary: 'Delete a task'
      description: 'Delete a task'
      operationId: 'deleteTask'
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          type: string
          description: 'id of task'
          required: true
      responses:
        200:
          description: 'Status 200 - Response OK'
          schema:
            $ref: '#/definitions/DeleteTaskConfirmation'
        403:
          description: 'Status 403 - Access forbidden'

  /task-tracker/comment:
    post:
      tags:
        - 'TaskTracker'
      summary: 'Add a comment'
      description: 'Add a comment'
      operationId: 'addComment'
      produces:
        - 'application/json'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddCommentRequestBody'
      responses:
        200:
          description: 'Status 200 - Response OK'
          schema:
            $ref: '#/definitions/AddCommentConfirmation'
        403:
          description: 'Status 403 - Access forbidden'

  /task-tracker/comment/{id}:
    delete:
      tags:
        - 'TaskTracker'
      summary: 'Delete a comment'
      description: 'Delete a comment'
      operationId: 'deleteComment'
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          type: string
          description: 'id of comment'
          required: true
      responses:
        200:
          description: 'Status 200 - Response OK'
          schema:
            $ref: '#/definitions/DeleteCommentConfirmation'
        403:
          description: 'Status 403 - Access forbidden'

definitions:
  Task:
    title: 'Task'
    type: object
    properties:
      id:
        title: 'Id'
        type: integer
        example: 1
      name:
        title: 'Name'
        type: string
        example: 'Task'
      description:
        title: 'Description'
        type: string
        example: 'This is some description for the task'
      assignedUsers:
        title: 'AssignedUsers'
        type: array
        items:
          $ref: '#/definitions/User'
      comments:
        title: 'Comments'
        type: array
        items:
          $ref: '#/definitions/Comment'

  User:
    title: 'User'
    type: object
    properties:
      id:
        title: 'Id'
        type: integer
        example: 1
      fullName:
        title: 'FullName'
        type: string
        example: 'Full Name'
      email:
        title: 'EMail'
        type: string
        example: 'example@example.com'
      username:
        title: 'Username'
        type: string
        example: 'userName'
      address:
        title: 'Address'
        type: string
        example: 'Wall St.'
      dateOfBirth:
        title: 'DateOfBirth'
        type: string
        format: date
      createdAt:
        title: 'CreatedAt'
        type: string
        format: 'date-time'
      comments:
        title: 'Comments'
        type: array
        items:
          $ref: '#/definitions/Comment'
    required:
      - fullName
      - email
      - username

  Comment:
    title: 'Comment'
    type: object
    properties:
      id:
        title: 'Id'
        type: integer
        example: 1
      username:
        title: 'Username'
        type: string
        example: 'username'
      content:
        title: 'Content'
        type: string
        example: 'content'
      createdAt:
        title: 'CreatedAt'
        type: string
        format: 'date-time'

  AddTaskRequestBody:
    title: 'AddTaskRequestBody'
    type: object
    properties:
      task:
        $ref: '#/definitions/TaskRequestBody'

  TaskRequestBody:
    title: 'TaskRequestBody'
    type: object
    properties:
      taskName:
        title: 'TaskName'
        type: string
        example: 'taskName'
      taskDescription:
        title: 'TitleDescription'
        type: string
        example: 'Task Description'
      assignedUsernames:
        title: 'AssignedUsernames'
        type: array
        items:
          type: string

  AddTaskConfirmation:
    title: 'AddTaskConfirmation'
    type: object
    properties:
      message:
        title: 'Message'
        type: string

  DeleteTaskConfirmation:
    title: 'DeleteTaskConfirmation'
    type: object
    properties:
      message:
        title: 'Message'
        type: string

  AddCommentRequestBody:
    title: 'AddCommentRequestBody'
    type: object
    properties:
      comment:
        title: 'Comment'
        type: object
        $ref: '#/definitions/CommentBody'

  CommentBody:
    title: 'CommentBody'
    type: object
    properties:
      taskId:
        title: 'TaskId'
        type: integer
        example: 1
      userId:
        title: 'UserId'
        type: integer
        example: 1
      content:
        title: 'content'
        type: string
        example: 'content'

  AddCommentConfirmation:
    title: 'AddCommentConfirmation'
    type: object
    properties:
      message:
        title: 'Message'
        type: string

  DeleteCommentConfirmation:
    title: 'DeleteCommentConfirmation'
    type: object
    properties:
      message:
        title: 'Message'
        type: string